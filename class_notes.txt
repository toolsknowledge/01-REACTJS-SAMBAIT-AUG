React
*****
    ReactJS is the "JavaScript" library

    ReactJS library given by "Facebook"

    ReactJS, used to develop "web applications"

    ReactJS current version is "18.X"

    we will develop web applications in two ways.

    1) JSX

    2) TSX

    JSX Stands for "JavaScript and XML"

    TSX Stands for "TypeScript and XML"

    JavaScript is the "Scripting Language"

    TypeScript is the "Programming Language"

    JavaScript wont follows the "OOPS".

    TypeScript follows the "OOPS"

    In General, Browsers can't understand the XML.

    So, we should convert XML to Equalent JavaScript.

    Babel is the inbuilt tool of ReactJS, used to convert XML to Equalent JavaScript

    React Internally follows the Virtal DOM.

    Because of Virtal DOM React applications are faster compared to Angular applications

    Angular applications follows Real DOM

Software Installation
*********************
1) download and instll NodeJS
    NodeJS Internally containes following tools
            1) node
            2) npm
            3) npx
    node tool, used to execute the "JavaScript"
    npm Stands for "node packaging manager"
    npm helps to install the "ReactJS"
    npx stands for "node packaging runner"
    npx creates the environment to build "react applications"

2) install yarn tool

    yarn tool given by "facebook"
    yarn tool, used to download the "libraries" / "modules"
    yarn tool Installation is "command based" Installation

    > npm install --location=global yarn

3) install create-react-app 

    create-react-app is the tool
    create-react-app tool used to create the react applications
    create-react-app tool Installation is command based Installation

    > npm install --location=global create-react-app


4) download and install Visual Studio Code


steps to create react application
*********************************
> npx create-react-app first-app
> cd first-app
> yarn start / npm start
The Default Port No of react application is 3000


Directory Structure of React Application
****************************************
node_modules
    node_modules containes libraries
    node_modules helps to create and execute the "react applications"

public/index.html
    react starts the execution from "index.html" file
    "index.html" file is the "main" template in react application
    "index.html" containes "div" whose id is "root"
src
    this folder used to deploy the components
    App.js file is the Default Component
    App.css file is the Style Sheet for App Component
    App.test.js is the Unit test case file App Component

src/index.css
    used to define the global styles
    these styles applicable to all components

src/index.js
    index.js file, used to register the components
    index.js file will link/handover our component to main template(index.html)

package.json
    package.json file containes libraries information

Components
**********
        Reusable Portion of Complex UI Called as Component
        We Can Create More than one Component
        We can provide Communication Between components
        Components are Reusable
        we can include one Component to another Component
        We can create Components in 2 ways
        1) Functional Level Components (Stateless Components)
        2) Class Level Components      (Stateful Components)


Single Page Applications
************************
    Loading one component to another component without refreshing 
called as Single Page Application

    navigation of one component to another component in Single Page Application called as "Routing"

    we will implement Single Page Applications with following library

            react-router-dom@6

State Management
****************
    To reduce Complexity of Communication Between Components, we have state Management

    we will implement State Management in two ways

    1) Context API

            createContext()

            useContext()

    2) Redux

Intrgration of Redux to React Application
*****************************************
1) create react application

        > npx create-react-app redux-ex3

2) switch to reduce-ex3

        > cd reduce-ex3

3) download the node modules

        => redux

        => react-redux

        redux library used to create redux architecture

        react-redux used to integrate redux architecture to react application

        yarn add redux react-redux





















































        



























